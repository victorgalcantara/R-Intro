labs(fill="")+
labs(x="NPI",y="Frequência")
mydata.2 <- mydata %>% select(NPI,educMae,rendFamP,faixas_rendFamP,
educMae_sd,rendFamP_sd,
depAdmin2,tpEscola) %>% na.exclude()
reg <- glm(formula = NPI ~ educMae + rendFamP + depAdmin2,
data = mydata.2,
family = "binomial")
summary(reg)
# Com variáveis padronizadas
reg <- glm(formula = NPI ~ educMae_sd + rendFamP_sd + depAdmin2,
data = mydata.2,
family = "binomial")
summary(reg)
calc_prob(z=1)
p = calc_prob(z = reg$fitted.values)
plot(y=p,x=reg$model$rendFamP_sd)
reg <- glm(formula = NPI ~ educMae + rendFamP + depAdmin2,
data = mydata.2,
family = "binomial")
summary(reg)
# Com variáveis padronizadas
reg <- glm(formula = NPI ~ educMae_sd + rendFamP_sd + depAdmin2,
data = mydata.2,
family = "binomial")
summary(reg)
p = calc_prob(z = reg$fitted.values)
plot(y=p,x=reg$model$rendFamP_sd)
stargazer(reg, nobs = T, type = "text") # mostra o valor de Log-Likelihood
library(pacman)
p_load(tidyverse,ggplot2,rio,patchwork,stargazer)
# Remove notação científica
options(scipen = 999)
# Limpando a memória
rm(list=ls()) # Remove all objects - remove objetos
gc()          # Garbage Clean - limpeza de lixos
# Define diretório
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# import ----------------------------------------------------------------------
escolas <- import("../1_data/escolas.xlsx")
str(escolas)
m_data <- escolas %>% select(NSE10,IEE,IAD,IDEB,ICG,tipo,area) %>% na.exclude()
m_data <- m_data %>% mutate(.,
NSE10 = scale(NSE10),
IEE = scale(IEE),
IDEB = scale(IDEB),
IAD = scale(IAD),
ICG = scale(ICG)
)
scater0 <- m_data %>%
ggplot(aes(x=IDEB,y=ICG))+
geom_jitter(alpha=.05,color="grey70")+
scale_y_continuous(limits = c(-3,3),breaks = seq(-3,3,0.5))+
geom_smooth(method = "lm", se = FALSE, color = "black")+
labs(title='ICG',
subtitle = paste("Cor = ",round(cor(m_data$IDEB,m_data$ICG),2)),
x="INSE")+
theme_minimal()
scater0
scater0 <- m_data %>%
ggplot(aes(x=IDEB,y=ICG))+
geom_jitter(alpha=.05,color="grey70")+
scale_y_continuous(limits = c(-3,3),breaks = seq(-3,3,0.5))+
geom_smooth(method = "lm", se = FALSE, color = "black")+
labs(title='ICG',
subtitle = paste("Cor = ",round(cor(m_data$IDEB,m_data$ICG),2)),
x="IDEB")+
theme_minimal()
scater0
scater0 <- m_data %>%
ggplot(aes(y=IDEB,x=ICG))+
geom_jitter(alpha=.05,color="grey70")+
scale_y_continuous(limits = c(-3,3),breaks = seq(-3,3,0.5))+
geom_smooth(method = "lm", se = FALSE, color = "black")+
labs(title='ICG',
subtitle = paste("Cor = ",round(cor(m_data$IDEB,m_data$ICG),2)),
y="IDEB")+
theme_minimal()
scater0
scater1 <- m_data %>%
ggplot(aes(y=IDEB,x=IEE))+
geom_jitter(alpha=.05,color="grey70")+
scale_y_continuous(limits = c(-3,3),breaks = seq(-3,3,0.5))+
geom_smooth(method = "lm", se = FALSE, color = "black")+
labs(title="IEE",subtitle = paste("Cor = ",round(cor(m_data$IDEB,m_data$IEE),2)),
y="IDEB")+
theme_minimal()
scater1
scater1
scater2 <- m_data %>%
ggplot(aes(y=IDEB,x=IAD))+
geom_jitter(alpha=.05,color="grey70")+
scale_y_continuous(limits = c(-3,3),breaks = seq(-3,3,0.5))+
geom_smooth(method = "lm", se = FALSE, color = "black")+
labs(title="IAD",subtitle = paste("Cor = ",round(cor(m_data$IDEB,m_data$IAD),2)),
y="IDEB")+
theme_minimal()
scater2
scater3 <- m_data %>%
ggplot(aes(x=NSE10,y=IDEB))+
geom_jitter(alpha=.05,color="grey70")+
scale_y_continuous(limits = c(-3,3),breaks = seq(-3,3,0.5))+
geom_smooth(method = "lm", se = FALSE, color = "black")+
labs(title='IDEB',
subtitle = paste("Cor = ",round(cor(m_data$NSE10,m_data$IDEB),2)),
x="INSE")+
theme_minimal()
scater3
scaters <- scater0 + scater2 + scater1 + scater3
dev.off()
# Save as pdf
pdf(file = "../3_outp/2_graph/scaters.pdf",width = 8,height = 3)
plot(scaters)
dev.off()
stargazer(reg1,reg2,reg3,reg4,type = "html",out = "../3_outp/1_table/reg_escolas.html")
reg1 = lm(data = m_data,formula = IDEB ~ NSE10)
reg2 = lm(data = m_data,formula = IDEB ~ NSE10 + IEE)
reg3 = lm(data = m_data,formula = IDEB ~ NSE10 + IEE + IAD)
reg4 = lm(data = m_data,formula = IDEB ~ NSE10 + IEE + IAD + ICG)
stargazer(reg1,reg2,reg3,reg4,type = "html",out = "../3_outp/1_table/reg_escolas.html")
vif(reg)
vif(reg4)
p_load(tidyverse,ggplot2,rio,stargazer,car,patchwork)
vif(reg4)
#install.packages(pacman)
library(pacman)
p_load(tidyverse,ggplot2,rio,car,
pROC,ROCR,stargazer,caret)
# Remove notação científica
options(scipen = 999)
# Limpando a memória
rm(list=ls()) # Remove all objects - remove objetos
gc()          # Garbage Clean - limpeza de lixos
# Define diretório
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
sucesso = 2
tentativas = 10
p
p = sucesso/tentativas
p
p
1 - p
p / (1 - p)
p = seq(0,1,0.01)
c = p / (1 - p)
plot(p,c)
# Função para cálculo da chance com base em uma probabilidade
calc_chance <- function(p) {p / (1-p)}
calc_chance(p = 0.3)
calc_chance(p = 0.7)
calc_chance(p = 0.75)
N = 100
# Definindo distribuição aleatória de renda
renda = rnorm(n = N,mean = 1100,sd = 8500) %>% abs()
e = rnorm(n = N,mean = 0,sd = 3)
# Y = a + Bx
voto = 600 + 2.5*renda + e
voto
# Discretizando para 0-1
voto = ifelse(voto < median(voto),0,1)
voto
mydata <- data.frame(voto,renda)
View(mydata)
reg1 = lm(data = mydata,voto ~ renda)
mydata$fit1 = reg1$fitted.values
View(mydata)
plot(y=voto ,x=renda,
pch = 16, col = "blue",
main = "Linha de tendência da regressão linear",
xlab = "Renda", ylab = "Probabilidade")
abline(reg1, col = "red", lwd = 3)
reg2 = glm(data = mydata,family = "binomial",voto ~ renda)
mydata$fit2 <- reg2$fitted.values
new_data <- data.frame(renda = seq(min(renda), max(renda), length.out = 100))
# Predict probabilities using the logistic model
predicted_probs <- predict(reg2, newdata = new_data, type = "response")
plot(renda, voto,
pch = 16, col = "blue",
main = "Linha de tendência da regressão logística",
xlab = "Renda", ylab = "Probabilidade")
lines(new_data$renda, predicted_probs, col = "red", lwd = 2)
View(mydata)
mydata$cutoff_lm <- ifelse(mydata$fit1 <= 0.5,0,1)
# Com modelo logístico
mydata$cutoff_lg <- ifelse(mydata$fit1 <= 0.5,0,1)
View(mydata)
table(mydata$cutoff_lm,mydata$voto)
table(mydata$cutoff_lg,mydata$voto)
table(mydata$cutoff_lm,mydata$voto)
table(mydata$cutoff_lg,mydata$voto)
# Com modelo logístico
mydata$cutoff_lg <- ifelse(mydata$fit2 <= 0.5,0,1)
table(mydata$cutoff_lg,mydata$voto)
m_confusao_lm <- table(mydata$cutoff_lm,mydata$voto)
m_confusao_lg <- table(mydata$cutoff_lg,mydata$voto)
m_confusao_lm
m_confusao_lg
m_confus[1,1]
m_confusao_lm[1,1]
m_confusao_lm[2,2]
sum(m_confus[,])
# Acurácia -----
# Prop de acerto
(m_confusao_lm[1,1] + m_confusao_lm[2,2]) / sum(m_confusao_lm[,])
(m_confusao_lg[1,1] + m_confusao_lg[2,2]) / sum(m_confusao_lg[,])
# Saeb 2019
enem_2021_sp <- import("../1_data/mydata_enem_2021_sp.csv")
mydata <- mutate(.data = enem_2021_sp,
educMae_sd = scale(educMae),
rendFamP_sd = scale(rendFamP),
depAdmin2 = case_when(tpEscola == "Publica" ~ 0,
tpEscola == "Privada" ~ 1),
faixas_rendFamP = case_when(
rendFamP < 1500 ~ "1. Baixa",
rendFamP >= 1500 & rendFamP < 5000 ~ "2. Média",
rendFamP > 5000 ~ "3. Alta"
)
)
corte = 600
mydata$NPI <- ifelse(mydata$media > corte,1,0)
# Histograma da média de desempenho com o corte da nota
mydata %>%
ggplot(aes(x = media)) +
theme_bw()+
geom_histogram(bins = 50,fill="steelblue",alpha=.7)+
geom_vline(xintercept = corte,lty=2,size=.7,color="red")+
geom_text(aes(y=1600,x=760,label="NPI = 700"),color="red")+
labs(x="Média de desempenho",y="Frequência")
mydata.2 <- mydata %>% select(NPI,educMae,rendFamP,faixas_rendFamP,
educMae_sd,rendFamP_sd,
depAdmin2,tpEscola) %>% na.exclude()
reg <- glm(formula = NPI ~ educMae + rendFamP + depAdmin2,
data = mydata.2,
family = "binomial")
summary(reg)
# Com variáveis padronizadas
reg <- glm(formula = NPI ~ educMae_sd + rendFamP_sd + depAdmin2,
data = mydata.2,
family = "binomial")
summary(reg)
calc_prob
View(calc_chance)
#Estabelecendo uma função para a probabilidade de ocorrência de um evento
calc_prob_log <- function(z){
prob = 1 / (1 + exp(-z)); return(prob)
}
calc_prob_log(z=0.39208)
2.71^0.39208
calc_chance(0.5967833)
calc_chance(p = 0.5967833)
2.71^0.39208
calc_prob_log(z=0.39208)
calc_chance(p = 0.5967833)
# Saeb 2019
enem_2021_sp <- import("../1_data/mydata_enem_2021_sp.csv")
View(enem_2021_sp)
mydata <- mutate(.data = enem_2021_sp,
educMae_sd = scale(educMae),
rendFamP_sd = scale(rendFamP),
depAdmin2 = case_when(tpEscola == "Publica" ~ 0,
tpEscola == "Privada" ~ 1),
faixas_rendFamP = case_when(
rendFamP < 1500 ~ "1. Baixa",
rendFamP >= 1500 & rendFamP < 5000 ~ "2. Média",
rendFamP > 5000 ~ "3. Alta"
)
)
corte = 600
mydata$NPI <- ifelse(mydata$media > corte,1,0)
# Histograma da média de desempenho com o corte da nota
mydata %>%
ggplot(aes(x = media)) +
theme_bw()+
geom_histogram(bins = 50,fill="steelblue",alpha=.7)+
geom_vline(xintercept = corte,lty=2,size=.7,color="red")+
geom_text(aes(y=1600,x=760,label="NPI = 700"),color="red")+
labs(x="Média de desempenho",y="Frequência")
# Histograma da média de desempenho com o corte da nota
mydata %>%
ggplot(aes(x = media)) +
theme_bw()+
geom_histogram(bins = 50,fill="steelblue",alpha=.7)+
geom_vline(xintercept = corte,lty=2,size=.7,color="red")+
geom_text(aes(y=1600,x=760,label="NPI = 700"),color="red")+
labs(x="Média de desempenho",y="Frequência")
corte = 600
mydata$NPI <- ifelse(mydata$media > corte,1,0)
# Histograma da média de desempenho com o corte da nota
mydata %>%
ggplot(aes(x = media)) +
theme_bw()+
geom_histogram(bins = 50,fill="steelblue",alpha=.7)+
geom_vline(xintercept = corte,lty=2,size=.7,color="red")+
geom_text(aes(y=1600,x=760,label="NPI = 700"),color="red")+
labs(x="Média de desempenho",y="Frequência")
# Histograma da média de desempenho com o corte da nota
mydata %>%
ggplot(aes(x = media)) +
theme_bw()+
geom_histogram(bins = 50,fill="steelblue",alpha=.7)+
geom_vline(xintercept = corte,lty=2,size=.7,color="red")+
geom_text(aes(y=1600,x=760,label="NPI = 600"),color="red")+
labs(x="Média de desempenho",y="Frequência")
# Quantidade de 0 e 1
mydata %>% mutate(NPI = factor(NPI)) %>% drop_na(NPI) %>%
ggplot(aes(x = NPI)) +
theme_bw()+
geom_bar(alpha=.8)+
labs(fill="")+
labs(x="NPI",y="Frequência")
mydata.2 <- mydata %>% select(NPI,educMae,rendFamP,faixas_rendFamP,
educMae_sd,rendFamP_sd,
depAdmin2,tpEscola) %>% na.exclude()
reg <- glm(formula = NPI ~ educMae + rendFamP + depAdmin2,
data = mydata.2,
family = "binomial")
summary(reg)
# Com variáveis padronizadas
reg <- glm(formula = NPI ~ educMae_sd + rendFamP_sd + depAdmin2,
data = mydata.2,
family = "binomial")
summary(reg)
summary(reg)
# Chances
# exponencial do logito, que é o valor de euler elevado ao valor do logito
2.7182818284^0.39208
# Chances
# exponencial do logito, que é o valor de euler elevado ao valor do logito
chance_educMae = 2.7182818284^0.39208
chance_educMae
(chance_educMae - 1) * 100
1 / (1 + 2.7182818284^-0.39208)
prob_eduMae = 1 / (1 + 2.7182818284^-0.39208)
prob_eduMae
calc_prob_log(z = 0.39208)
summary(reg)
logitos = c(0.39208,0.35159,0.89581)
calc_prob_log(z = logitos)
calc_chance_log = function(z,percent) {
chance = 2.7182818284^z ;
if(percent == TRUE) {percent_chance = ((2.7182818284^z) - 1) * 100};
return(chance,percent_chance)
}
calc_chance_log(z = logitos,percent = T)
return(chance)
calc_chance_log = function(z,percent) {
chance = 2.7182818284^z ;
if(percent == TRUE) {percent_chance = ((2.7182818284^z) - 1) * 100};
return(chance)
}
calc_chance_log(z = logitos,percent = T)
return(percent_chance)
calc_chance_log = function(z,percent) {
chance = 2.7182818284^z ;
if(percent == TRUE) {percent_chance = ((2.7182818284^z) - 1) * 100};
return(chance)
return(percent_chance)
}
calc_chance_log(z = logitos,percent = T)
return(chance);
calc_chance_log = function(z,percent) {
chance = 2.7182818284^z ;
if(percent == TRUE) {percent_chance = ((2.7182818284^z) - 1) * 100};
return(chance);
return(percent_chance)
}
calc_chance_log(z = logitos,percent = T)
calc_chance_log = function(z,percent) {
chance = 2.7182818284^z
return(chance)
}
calc_chance_log = function(z) {
chance = 2.7182818284^z
return(chance)
}
calc_chance_log(z = logitos)
# Com variáveis padronizadas
reg <- glm(formula = NPI ~ educMae_sd + rendFamP_sd + depAdmin2,
data = mydata.2,
family = "binomial")
summary(reg)
coefficients(reg)
logitos = coefficients(reg)
calc_chance_log(z = logitos)
stargazer(reg, nobs = T, type = "text") # mostra o valor de Log-Likelihood
# Probabilidades preditas pelo modelo
mydata.2$phat <- reg$fitted.values
# Distribuição das probabilidades preditas pelo modelo
mydata.2 %>%
ggplot(aes(x = phat))+
theme_bw()+
geom_histogram(bins = 50)+
scale_y_continuous(expand = c(0.01,0))+
scale_x_continuous(expand = c(0.01,0))+
labs(x="Probabilidade predita pelo modelo",y="Frequência")
# Distrib. de probabilidade por tipo de escola
mydata.2 %>%
ggplot(aes(x = phat))+
theme_bw()+
geom_density(aes(fill=tpEscola),bw=0.02,alpha=.7)+
scale_y_continuous(expand = c(0.01,0))+
scale_x_continuous(expand = c(0.01,0))+
labs(fill="Escola",x="Probabilidade predita")
mydata.2 %>%
ggplot(aes(x = phat))+
theme_bw()+
geom_density(aes(fill=faixas_rendFamP),bw=0.02,alpha=.7)+
scale_y_continuous(expand = c(0.01,0))+
scale_x_continuous(expand = c(0.01,0))+
labs(fill="Renda Familiar \n per capta",x="Probabilidade predita")
# Coeficientes
reg$coefficients
# Modelo
modelo <- reg$model
modelo
# Probabilidades preditas
modelo$phat <- reg$fitted.values
modelo <- relocate(.data = modelo,
NPI,phat,
.after = depAdmin2)
view(modelo)
# valor de Log-Likelihood (LL)
logLik(reg)
#Exemplo: qual a probabilidade média de ter nota para ingressar na Usp
# se a mãe tiver escolaridade 16 e a renda ser 10000
educMae = c(2,12,16,17)
rendFamP = c(500,2500,5000,30000)
depAdmin2 = c(0,1,1,1)
dados_predicao <- data.frame(educMae,rendFamP,depAdmin2)
dados_predicao$prob_predita = predict(object = reg,
newdata = dados_predicao,
type = "response")
#Exemplo: qual a probabilidade média de ter nota para ingressar na Usp
# se a mãe tiver escolaridade 16 e a renda ser 10000
educMae_sd = c(2,1.2,0,0.9)
rendFamP_sd = c(8000,3500,2200,5000)
depAdmin2 = c(0,1,1,1)
depAdmin2 = c(1,1,0,0)
dados_predicao <- data.frame(educMae,rendFamP,depAdmin2)
dados_predicao$prob_predita = predict(object = reg,
newdata = dados_predicao,
type = "response")
#Exemplo: qual a probabilidade média de ter nota para ingressar na Usp
# se a mãe tiver escolaridade 16 e a renda ser 10000
educMae_sd = c(2,1.2,0,0.9)
rendFamP_sd = c(8000,3500,2200,5000)
depAdmin2 = c(1,1,0,0)
dados_predicao <- data.frame(educMae,rendFamP,depAdmin2)
dados_predicao$prob_predita = predict(object = reg,
newdata = dados_predicao,
type = "response")
reg
dados_predicao <- data.frame(educMae_sd,rendFamP_sd,depAdmin2)
dados_predicao$prob_predita = predict(object = reg,
newdata = dados_predicao,
type = "response")
#Exemplo: qual a probabilidade média de ter nota para ingressar na Usp
# se a mãe tiver escolaridade 16 e a renda ser 10000
educMae_sd = c(2,1.2,0,0.9)
rendFamP_sd = c(8000,3500,2200,5000)
depAdmin2 = c(1,1,0,0)
dados_predicao <- data.frame(educMae_sd,rendFamP_sd,depAdmin2)
dados_predicao$prob_predita = predict(object = reg,
newdata = dados_predicao,
type = "response")
dados_predicao
dados_predicao$prob_predita = predict(object = reg,
newdata = dados_predicao,
type = "response")
class(educMae_sd)
class(rendFamP_sd)
class(depAdmin2)
class(mydata.2$depAdmin2)
#Exemplo: qual a probabilidade média de ter nota para ingressar na Usp
# se a mãe tiver escolaridade 16 e a renda ser 10000
educMae_sd = c(2,1.2,0,0.9)
rendFamP_sd = c(8000,3500,2200,5000)
depAdmin2 = c(1,1,0,0)
dados_predicao <- data.frame(educMae_sd,rendFamP_sd,depAdmin2)
dados_predicao$prob_predita = predict(object = reg,
newdata = dados_predicao,
type = "response")
reg
predito <- predict(reg, type = "response") >= 0.15
predito
observado <- mydata.2$NPI == 1
m_confus <- table(predito,observado)[2:1, 2:1]
m_confus
data.frame(predito,observado) %>% head()
# Acurácia -----
# Prop de acerto
(m_confus[1,1] + m_confus[2,2]) / sum(m_confus[,])
m_confus[1,1]
# Sensitividade ----
# Prop de acerto (Y = 1)
sensitividade = m_confus[1,1] / sum(m_confus[,1])
sensitividade
m_confus[2,2]
# Especificidade ----
# Prop de acerto (Y = 0)
especificidade = m_confus[2,2] / sum(m_confus[,2])
especificidade
m_confus
#(função confusionMatrix do pacote caret)
confusionMatrix(m_confus)
#função roc do pacote pROC
ROC <- roc(response = mydata.2$NPI,
predictor = reg$fitted.values)
plot(ROC)
plot(ROC,xlim = c(1,0))
plot(ROC,xlim = c(1,0))
vif(reg)
