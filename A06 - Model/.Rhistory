anosEst <- rbinom(n = 1000,size = seq(0,17,1),prob = rep(1/17,17))
hist(anosEst)
seq(0,17,1)
anosEst <- rbinom(n = 1000,size = seq(0,17,1),prob = rep(1/17,18))
hist(anosEst)
anosEst <- rnorm(n = 1000,mean = 12,sd = 2)
anosEst <- rnorm(n = 1000,mean = 12,sd = 2) %>% round()
anosEst <- ifelse(anosEst > 17,17,anosEst)
anosEst <- ifelse(anosEst < 0,0,anosEst)
hist(anosEst)
renda = renda + renda*(anosEst*50)
ln(renda ~ anosEst)
ln(renda ~ anosEst)
p_load(tidyverse,rio,weights)
ln(renda ~ anosEst)
lm(renda ~ anosEst)
renda <- rnorm(n = 1000,mean = 1100,sd = 8500)
hist(renda)
anosEst <- rnorm(n = 1000,mean = 12,sd = 2) %>% round()
anosEst <- ifelse(anosEst < 0,0,anosEst)
anosEst <- ifelse(anosEst > 17,17,anosEst)
hist(anosEst)
renda = renda + anosEst*50
lm(renda ~ anosEst)
lm(renda ~ anosEst)
lm(renda ~ anosEst)
plot(renda,anosEst)
renda = mean(renda) + anosEst*50
plot(renda,anosEst)
lm(renda ~ anosEst)
plot(renda,anosEst)
lm(renda ~ anosEst)
mean(renda)
mean(anosEst)
12.026*50
1939 +601.3
renda = rnorm(n = 1000,mean = 1100,sd = 8500) %>% abs(2)
renda = rnorm(n = 1000,mean = 1100,sd = 8500) %>% round(2)
hist(renda)
renda = rnorm(n = 1000,mean = 1100,sd = 8500) %>% abs()
hist(renda)
a = 1280 # intercept: performance when income = 0
anosEst <- rnorm(n = 1000,mean = 12,sd = 2) %>% round()
anosEst <- ifelse(anosEst < 0,0,anosEst)
anosEst <- ifelse(anosEst > 17,17,anosEst)
hist(anosEst)
renda = rnorm(n = 1000,mean = 1100,sd = 8500) %>% abs()
hist(renda)
renda = anosEst*50
e = rnorm(n = 1000,mean = 0,sd = 10) # random error term
Y = a + anosEst*50 + e
renda = rnorm(n = 1000,mean = 1100,sd = 8500) %>% abs()
hist(renda)
e = rnorm(n = 1000,mean = 0,sd = 10) # random error term
Y = a + anosEst*50 + e
summary(lm(educ ~ income))
summary(lm(renda ~ anosEst))
summary(lm(Y ~ anosEst))
summary(lm(Y ~ anosEst))
renda = 1280 + anosEst*50 + e
plot(anosEst,renda)
e = rnorm(n = 1000,mean = 0,sd = 1000) # random error term
renda = 1280 + anosEst*50 + e
plot(anosEst,renda)
e = rnorm(n = 1000,mean = 0,sd = 10) # random error term
renda = 1280 + anosEst*50 + e
plot(anosEst,renda)
e = rnorm(n = 1000,mean = 0,sd = 0) # random error term
renda = 1280 + anosEst*50 + e
plot(anosEst,renda)
renda = 600 + anosEst*50
plot(anosEst,renda)
# Definindo o quanto vamos errar
e = rnorm(n = 1000,mean = 0,sd = 50) # random error term
renda = 600 + anosEst*50 + e
hist(renda)
plot(renda,anosEst)
plot(anosEst,renda)
renda1 = 600 + anosEst*50
plot(anosEst,renda)
# Definindo o quanto vamos errar
e = rnorm(n = 1000,mean = 0,sd = 50) # random error term
renda2 = 600 + anosEst*50 + e
plot(anosEst,renda)
plot(anosEst,renda2)
plot(anosEst,renda1)
summary(lm(renda1 ~ anosEst))
summary(lm(renda2 ~ anosEst))
abline(lm(renda1 ~ anosEst))
plot(anosEst,renda2)
abline(lm(renda1 ~ anosEst))
abline(lm(renda1 ~ anosEst),col="red")
abline(lm(renda1 ~ anosEst),col="red",lwd=3)
abline(lm(renda1 ~ anosEst),col="blue",lwd=3)
cov(anosEst,renda2)
cor(anosEst,renda2)
me_inc = mean(renda2)
me_edu = mean(anosEst)
# Centring variables
c_inc = renda2 - me_inc
c_edu = anosEst - me_edu
# Standard variables
z_inc = (renda2 - me_inc) / sd(renda2)
z_edu = (anosEst - me_edu) / sd(anosEst)
cov(z_inc,z_edu)
cor(z_inc,z_edu)
summary(lm(renda2 ~ anosEst))
cov(anosEst,renda2)
cor(anosEst,renda2)^2
# Standard variables
z_inc = (renda2 - me_inc) / sd(renda2)
z_edu = (anosEst - me_edu) / sd(anosEst)
cov(z_inc,z_edu)
cor(z_inc,z_edu)
cor(z_inc,z_edu)^2
mydata <- data.frame(anosEst,renda2)
export(mydata,"1_data/mydata.xlsx")
renda = rnorm(n = 1000,mean = 1100,sd = 8500)
renda = rnorm(n = 1000,mean = 1100,sd = 8500) %>% abs()
hist(renda)
renda = rnorm(n = 1000,mean = 1100,sd = 9500) %>% abs()
hist(renda)
renda = rnorm(n = 1000,mean = 1100,sd = 8500) %>% abs()
hist(renda)
renda = rnorm(n = 1000,mean = 1100,sd = 8500) %>% abs()
hist(renda)
# Definindo distribuição de anos de estudo
anosEst <- rnorm(n = 1000,mean = 12,sd = 2) %>% round()
anosEst <- ifelse(anosEst < 0,0,anosEst)
anosEst <- ifelse(anosEst > 17,17,anosEst)
hist(anosEst)
# Definindo distribuição de anos de estudo
anosEst <- rnorm(n = 1000,mean = 12,sd = 2) %>% abs() %>% round()
anosEst <- ifelse(anosEst < 0,0,anosEst)
anosEst <- ifelse(anosEst > 17,17,anosEst)
hist(anosEst)
# Definindo distribuição de anos de estudo
anosEst <- rnorm(n = 1000,mean = 12,sd = 2) %>% abs() %>% round()
anosEst <- ifelse(anosEst < 0,0,anosEst)
anosEst <- ifelse(anosEst > 17,17,anosEst)
hist(anosEst)
# Definindo distribuição da renda condicionada aos anos de estudo
m_renda = mean(renda)
renda1 = m_renda + anosEst*50
plot(anosEst,renda1)
mydata <- data.frame(anosEst,renda1)
mydata %>% filter(anosEst == 0) %>% summarise(mean(renda1))
mydata %>% filter(anosEst < 1) %>% summarise(mean(renda1))
mydata %>% filter(anosEst < 5) %>% summarise(mean(renda1))
mydata
mydata %>% filter(anosEst < 5)
# Definindo distribuição aleatória de anos de estudo
anosEst <- rnorm(n = 1000,mean = 12,sd = 4) %>% abs() %>% round()
anosEst <- ifelse(anosEst < 0,0,anosEst)
anosEst <- ifelse(anosEst > 17,17,anosEst)
hist(anosEst)
# Definindo distribuição aleatória de anos de estudo
anosEst <- rnorm(n = 1000,mean = 12,sd = 4) %>% round() %>% abs()
anosEst <- ifelse(anosEst < 0,0,anosEst)
anosEst <- ifelse(anosEst > 17,17,anosEst)
hist(anosEst)
# Definindo distribuição aleatória de anos de estudo
anosEst <- rnorm(n = 1000,mean = 12,sd = 4) %>% round() %>% abs()
anosEst <- ifelse(anosEst > 17,17,anosEst)
hist(anosEst)
# Definindo distribuição aleatória de anos de estudo
anosEst <- rnorm(n = 1000,mean = 9,sd = 4) %>% round() %>% abs()
anosEst <- ifelse(anosEst > 17,17,anosEst)
hist(anosEst)
# Definindo distribuição da renda condicionada aos anos de estudo
m_renda = mean(renda)
renda1 = m_renda + anosEst*50
plot(anosEst,renda1)
mydata <- data.frame(anosEst,renda1)
mydata %>% filter(anosEst < 5) %>% summarise(mean(renda1))
mydata %>% filter(anosEst < 3) %>% summarise(mean(renda1))
mydata %>% filter(anosEst == 0) %>% summarise(mean(renda1))
m_renda
m_renda
# Definição de intercepto: y quando a média de x é zero
mydata %>% filter(anosEst == 0) %>% summarise(mean(renda1))
m_renda
# Y = a + Bx
renda1 = m_renda + 50*anosEst
plot(anosEst,renda1)
mydata <- data.frame(anosEst,renda1)
# Definição de intercepto: y quando a média de x é zero
mydata %>% filter(anosEst == 0) %>% summarise(mean(renda1))
# Definindo o quanto vamos errar
e = rnorm(n = 1000,mean = 0,sd = 100) # random error term
renda2 = m_renda + 50*anosEst + e
plot(anosEst,renda2)
summary(lm(renda2 ~ anosEst))
plot(anosEst,renda2)
abline(lm(renda1 ~ anosEst),col="blue",lwd=3)
lm(renda1 ~ anosEst)
plot(anosEst,renda2)
abline(lm(renda1 ~ anosEst),col="blue",lwd=3)
plot(anosEst,renda1)
abline(lm(renda1 ~ anosEst),col="blue",lwd=3)
mydata <- data.frame(anosEst,renda,renda1,renda2)
mypnadc <- import("1_data/mypnadc_2023_sp.xlsx")
mypnadc_sp <- import("1_data/mypnadc_2023_sp.xlsx")
erros = mydata$renda - mydata$renda2
sum(erros)
reg1 <- lm(renda1 ~ anosEst)
reg1
reg2 <- lm(renda2 ~ anosEst)
reg2
m_renda2 <- mean(renda2)
y_barra <- mean(renda2)
x_barra <- mean(anosEst)
x = renda2
y = anosEst
y_barra <- mean(renda2)
x_barra <- mean(anosEst)
sum( (y - y_barra)*(x - x_barra) ) / sum( (x - x_barra) )
sum( (y - y_barra)*(x - x_barra) )
y - y_barra
x = renda2
y = anosEst
y_barra <- mean(renda2)
x_barra <- mean(anosEst)
sum( (y - y_barra)*(x - x_barra) ) / sum( (x - x_barra) )
sum( (y - y_barra)*(x - x_barra) ) / sum( (x - x_barra) )^2
sum( (y - y_barra)*(x - x_barra) ) / (sum( (x - x_barra) )^2)
sum( (y - y_barra)*(x - x_barra) ) / sum( (x - x_barra)^2 )
sum( (y - y_barra)*(x - x_barra) ) / (sum( (x - x_barra)^2 ))
reg2 <- lm(renda2 ~ anosEst)
reg2
N = nrow(mydata)
(sum( (y - y_barra)*(x - x_barra) )/N) / (sum( (x - x_barra)^2 )/N)
(sum( (x - x_barra)^2 )/N)
var(x)
x = mydata$renda2
y = mydata$anosEst
y_barra <- mean(mydata$renda2)
x_barra <- mean(mydata$anosEst)
N = nrow(mydata)
(sum( (y - y_barra)*(x - x_barra) )/N) / (sum( (x - x_barra)^2 )/N)
(sum( (x - x_barra)^2 )/N)
var(x)
sum( (x - x_barra)^2 )/N
sum( (y - y_barra)*(x - x_barra) )/N / sum( (x - x_barra)^2 )/N
x = renda2
y = anosEst
b1 = sum((x - mean(x))*(y - mean(y)))/sum((x - mean(x))^2)
b1
b0
# Intercepto
b0 = mean(y) - b1*mean(x)
b0
# Definindo distribuição aleatória de renda
renda = rnorm(n = 1000,mean = 1100,sd = 8500) %>% abs()
hist(renda)
# Definindo distribuição aleatória de anos de estudo
anosEst <- rnorm(n = 1000,mean = 9,sd = 4) %>% round() %>% abs()
anosEst <- ifelse(anosEst > 17,17,anosEst)
hist(anosEst)
# Definindo distribuição da renda condicionada aos anos de estudo
m_renda = mean(renda)
# Y = a + Bx
renda1 = m_renda + 50*anosEst
plot(anosEst,renda1)
mydata <- data.frame(anosEst,renda1)
# Definição de intercepto: y quando a média de x é zero
mydata %>% filter(anosEst == 0) %>% summarise(mean(renda1))
reg1 <- lm(renda1 ~ anosEst)
reg1
plot(anosEst,renda1)
abline(lm(renda1 ~ anosEst),col="blue",lwd=3)
# Definindo o quanto vamos errar
e = rnorm(n = 1000,mean = 0,sd = 100) # random error term
renda2 = m_renda + 50*anosEst + e
plot(anosEst,renda2)
reg2 <- lm(renda2 ~ anosEst)
reg2
plot(anosEst,renda2)
abline(lm(renda2 ~ anosEst),col="blue",lwd=3)
mydata <- data.frame(anosEst,renda,renda1,renda2)
x = renda2
y = anosEst
# Calculo manual dos coeficientes de regressão
# Inclinação
b1 = sum((x - mean(x))*(y - mean(y)))/sum((x - mean(x))^2)
b1
# Intercepto
b0 = mean(y) - b1*mean(x)
b0
b1
b0 = coefficients(reg2)[1]
b1 = coefficients(reg2)[2]
b0
b1
reg2 <- lm(data = mydata,renda2 ~ anosEst)
reg2
x = renda2
y = anosEst
b0 = coefficients(reg2)[1]
b1 = coefficients(reg2)[2]
b0
b1
x = mydata$renda2
y = mydata$anosEst
b0 = coefficients(reg2)[1]
b1 = coefficients(reg2)[2]
b1 = sum((x - mean(x))*(y - mean(y)))/sum((x - mean(x))^2)
b1
# Intercepto
b0 = mean(y) - b1*mean(x)
b0
for( i in 1:2) { print(i) }
for( i in 1:100) { print(i) }
print(1)
print(2)
nomes <- c("José","Maria","Henrique","Paula")
nomes
nomes[1]
nomes[2]
nomes[3]
for (i in nomes) { print(i) }
for (i in nomes) { print(i) }
for (i in 1:4) { print( nomes[i] ) }
for (i in 1:4){ print( paste("O nome",i,"é",nomes[i]) ) }
#Exemplo 1:
for (h in 1:10){
print("Ola Mundo")
}
for(i in 1:10){
print(x <- i+5)
}
soma_seq = 0
soma_seq
for (n in 1:10){
soma_seq = soma_seq + n
print(soma_seq)
}
x = 10
x
if( x == 10 ) {"OK"} # Altere o valor e veja que ele não retorna nada
x == 10
x == 12
if( x == 12 ) {"OK"} # Altere o valor e veja que ele não retorna nada
if( x == 12 ) {"OK"} # Altere o valor e veja que ele não retorna nada
if( x == 10 ) {"OK"} # Altere o valor e veja que ele não retorna nada
if( x == 10 ){ x = x^2 ; print(x) }
# Podemos também incluir a condição alternativa (OU - OU SE / ELSE - ELSE IF)
if( x == 10 ) {"x é igual a 10"} else {"x é diferente de 10"}
x == 10
if( x == 10 ) {"x é igual a 10"} else if(x == 100) {"x não é 10, é 100"}
x == 100
df <- data.frame(v1 = 1:5,v2 = c("João","Maria","Ronaldo","Pedro","Ana"))
df
lista1 <- list(df,x = 1:20,df$v2)
lista1[[1]]
lista1[[2]]
lista1[[3]]
nomes <- c("José","Maria","Henrique","Paula")
nomes
i=1
nomes[i]/2
for(i in 1:8){
if(i < 4) { nomes[i]/2 } else if (i > 4) { print(i) }
}
for(i in 1:8){
tryCatch({ expr = if(i < 4) { nomes[i]/2 } else if (i > 4) { print(i) } },
error = function(x) { x }
)
}
for(i in 1:8){
tryCatch({ expr = if(i < 4) { nomes[i]/2 } else if (i > 4) { print(i) } },
error = function(x) { print(x) }
)
}
for(i in 1:8){
tryCatch({ expr = if(i <= 4) { nomes[i]/2 } else if (i > 4) { print(i) } },
error = function(x) { print(x) }
)
}
# Pulando iterações
for(i in 1:8){
if(i <= 4) { next } else if (i > 4) { print(i) }
}
for(i in 1:8){
if(i <= 4) { next } else if (i == 7) { break } else if(i > 4){ print(i) }
}
for(i in 1:8){
if(i <= 4) { next } else if(i > 4){ print(i) } else if (i == 7) { break }
}
load("../1_data/pnadc_sp_2023.RDS")
getwd()
load("1_data/pnadc_sp_2023.RDS")
View(mypnadc_sp)
vars <- c("sexo","raca","classeOcup2")
vars
i=1
var_i <- vars[1]
i
vars[i]
var_i <- vars[i]
var_i
mydata <- mypnadc_sp %>% select(ln_rendaOcup,anosEst,var_i)
library(tidyverse)
mydata <- mypnadc_sp %>% select(ln_rendaOcup,anosEst,var_i)
View(mydata)
names(mydata)[3]
names(mydata)[3] <- "var_i"
View(mydata)
mydata %>%
ggplot(aes(y=ln_rendaOcup,x=anosEst,col=var_i))+
geom_point()
teste <- mydata %>% na.exclude()
teste <- na.exclude(mydata)
View(teste)
mydata <- mypnadc_sp %>% na.exclude() %>% select(ln_rendaOcup,anosEst,var_i)
names(mydata)[3] <- "var_i"
mydata %>% na.exclude() %>%
ggplot(aes(y=ln_rendaOcup,x=anosEst,col=var_i))+
geom_point()
mydata <- mypnadc_sp %>% na.exclude() %>% select(rendOcup,anosEst,var_i)
names(mydata)[3] <- "var_i"
mydata %>% na.exclude() %>%
ggplot(aes(y=rendOcup,x=anosEst,col=var_i))+
geom_point()
mydata <- mypnadc_sp %>% na.exclude() %>% select(ln_rendaOcup,anosEst,var_i)
names(mydata)[3] <- "var_i"
mydata %>% na.exclude() %>%
ggplot(aes(y=ln_rendaOcup,x=anosEst,col=var_i))+
geom_point()
mydata %>% na.exclude() %>%
ggplot(aes(y=ln_rendaOcup,x=anosEst,col=var_i))+
geom_point()+
geom_smooth(formula = y~x, method="gam",col="black")
mydata %>% na.exclude() %>%
ggplot(aes(y=ln_rendaOcup,x=anosEst,col=var_i))+
geom_point()+
geom_smooth(formula = y~x, method="gam",col="black")+
theme_minimal()
var_i
mydata %>% na.exclude() %>%
ggplot(aes(y=ln_rendaOcup,x=anosEst,col=var_i))+
geom_point()+
geom_smooth(formula = y~x, method="gam",col="black")+
theme_minimal()+
labs(title = var_i,x="Anos de estudo",y="Log(Renda)",col=var_i)+
theme(legend.position = "none")+
facet_wrap(~var_i)
pdf(file = paste0("../3_outp/2_graph/plt_",var_i,".pdf"),
width = 10,height = 8)
pdf(file = paste0("3_outp/2_graph/plt_",var_i,".pdf"),
width = 10,height = 8)
dev.off()
dev.off()
pdf(file = paste0("3_outp/2_graph/plt_",var_i,".pdf"),
width = 10,height = 8)
print(plt_i)
plt_i <- mydata %>% na.exclude() %>%
ggplot(aes(y=ln_rendaOcup,x=anosEst,col=var_i))+
geom_point()+
geom_smooth(formula = y~x, method="gam",col="black")+
theme_minimal()+
labs(title = var_i,x="Anos de estudo",y="Log(Renda)",col=var_i)+
theme(legend.position = "none")+
facet_wrap(~var_i)
pdf(file = paste0("3_outp/2_graph/plt_",var_i,".pdf"),
width = 10,height = 8)
print(plt_i)
dev.off()
dev.off()
dev.off()
pdf(file = paste0("3_outp/2_graph/plt_",var_i,".pdf"),
width = 10,height = 8)
print(plt_i)
dev.off()
vars <- c("sexo","raca","classeOcup2")
for( i in 1:3 ){
var_i <- vars[i]
mydata <- mypnadc_sp %>% na.exclude() %>% select(ln_rendaOcup,anosEst,var_i)
names(mydata)[3] <- "var_i"
plt_i <- mydata %>% na.exclude() %>%
ggplot(aes(y=ln_rendaOcup,x=anosEst,col=var_i))+
geom_point()+
geom_smooth(formula = y~x, method="gam",col="black")+
theme_minimal()+
labs(title = var_i,x="Anos de estudo",y="Log(Renda)",col=var_i)+
theme(legend.position = "none")+
facet_wrap(~var_i)
# Export pdf
pdf(file = paste0("3_outp/2_graph/plt_",var_i,".pdf"),
width = 10,height = 8)
print(plt_i)
dev.off()
}
for( i in 1:3 ){
print(i)
var_i <- vars[i]
mydata <- mypnadc_sp %>% na.exclude() %>% select(ln_rendaOcup,anosEst,var_i)
names(mydata)[3] <- "var_i"
plt_i <- mydata %>% na.exclude() %>%
ggplot(aes(y=ln_rendaOcup,x=anosEst,col=var_i))+
geom_point()+
geom_smooth(formula = y~x, method="gam",col="black")+
theme_minimal()+
labs(title = var_i,x="Anos de estudo",y="Log(Renda)",col=var_i)+
theme(legend.position = "none")+
facet_wrap(~var_i)
# Export pdf
pdf(file = paste0("3_outp/2_graph/plt_",var_i,".pdf"),
width = 10,height = 8)
print(plt_i)
dev.off()
}
